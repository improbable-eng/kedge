// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: winch/config/auth.proto

/*
Package winch_config is a generated protocol buffer package.

It is generated from these files:
	winch/config/auth.proto
	winch/config/mapper.proto

It has these top-level messages:
	AuthConfig
	AuthSource
	KubernetesAccess
	OIDCAccess
	DummyAccess
	TokenAccess
	MapperConfig
	Route
	DirectRoute
	RegexpRoute
*/
package winch_config

import go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *AuthConfig) Validate() error {
	for _, item := range this.AuthSources {
		if item != nil {
			if err := go_proto_validators.CallValidatorIfExists(item); err != nil {
				return go_proto_validators.FieldError("AuthSources", err)
			}
		}
	}
	return nil
}
func (this *AuthSource) Validate() error {
	if oneOfNester, ok := this.GetType().(*AuthSource_Dummy); ok {
		if oneOfNester.Dummy != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.Dummy); err != nil {
				return go_proto_validators.FieldError("Dummy", err)
			}
		}
	}
	if oneOfNester, ok := this.GetType().(*AuthSource_Kube); ok {
		if oneOfNester.Kube != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.Kube); err != nil {
				return go_proto_validators.FieldError("Kube", err)
			}
		}
	}
	if oneOfNester, ok := this.GetType().(*AuthSource_Oidc); ok {
		if oneOfNester.Oidc != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.Oidc); err != nil {
				return go_proto_validators.FieldError("Oidc", err)
			}
		}
	}
	if oneOfNester, ok := this.GetType().(*AuthSource_Token); ok {
		if oneOfNester.Token != nil {
			if err := go_proto_validators.CallValidatorIfExists(oneOfNester.Token); err != nil {
				return go_proto_validators.FieldError("Token", err)
			}
		}
	}
	return nil
}
func (this *KubernetesAccess) Validate() error {
	return nil
}
func (this *OIDCAccess) Validate() error {
	return nil
}
func (this *DummyAccess) Validate() error {
	return nil
}
func (this *TokenAccess) Validate() error {
	return nil
}
