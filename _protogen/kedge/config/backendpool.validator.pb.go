// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kedge/config/backendpool.proto

/*
Package kedge_config is a generated protocol buffer package.

It is generated from these files:
	kedge/config/backendpool.proto
	kedge/config/director.proto

It has these top-level messages:
	BackendPoolConfig
	TlsServerConfig
	DirectorConfig
*/
package kedge_config

import regexp "regexp"
import fmt "fmt"
import github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/golang/protobuf/proto"
import math "math"
import _ "github.com/mwitkow/go-proto-validators"
import  _ "github.com/improbable-eng/kedge/_protogen/kedge/config/grpc/backends"
import  _ "github.com/improbable-eng/kedge/_protogen/kedge/config/http/backends"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *BackendPoolConfig) Validate() error {
	for _, item := range this.TlsServerConfigs {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("TlsServerConfigs", err)
			}
		}
	}
	if this.Grpc != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Grpc); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Grpc", err)
		}
	}
	if this.Http != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Http); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Http", err)
		}
	}
	return nil
}
func (this *BackendPoolConfig_Grpc) Validate() error {
	for _, item := range this.Backends {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Backends", err)
			}
		}
	}
	return nil
}
func (this *BackendPoolConfig_Http) Validate() error {
	for _, item := range this.Backends {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Backends", err)
			}
		}
	}
	return nil
}

var _regex_TlsServerConfig_Name = regexp.MustCompile("^[a-z_.]{2,64}$")

func (this *TlsServerConfig) Validate() error {
	if !_regex_TlsServerConfig_Name.MatchString(this.Name) {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-z_.]{2,64}$"`, this.Name))
	}
	return nil
}
