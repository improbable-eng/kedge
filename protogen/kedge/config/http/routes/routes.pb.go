// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kedge/config/http/routes/routes.proto

package kedge_config_http_routes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// / Route describes a mapping between a stable proxying endpoint and a pre-defined backend.
type Route struct {
	// / backend_name is the string identifying the HTTP backend pool to send data to.
	BackendName   string   `protobuf:"bytes,1,opt,name=backend_name,json=backendName" json:"backend_name,omitempty"`
	Matcher       *Matcher `protobuf:"bytes,2,opt,name=matcher" json:"matcher,omitempty"`
	Autogenerated bool     `protobuf:"varint,3,opt,name=autogenerated" json:"autogenerated,omitempty"`
}

func (m *Route) Reset()                    { *m = Route{} }
func (m *Route) String() string            { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()               {}
func (*Route) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Route) GetBackendName() string {
	if m != nil {
		return m.BackendName
	}
	return ""
}

func (m *Route) GetMatcher() *Matcher {
	if m != nil {
		return m.Matcher
	}
	return nil
}

func (m *Route) GetAutogenerated() bool {
	if m != nil {
		return m.Autogenerated
	}
	return false
}

func init() {
	proto.RegisterType((*Route)(nil), "kedge.config.http.routes.Route")
}

func init() { proto.RegisterFile("kedge/config/http/routes/routes.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xcd, 0x4e, 0x4d, 0x49,
	0x4f, 0xd5, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0xd7, 0xcf, 0x28, 0x29, 0x29, 0xd0, 0x2f, 0xca,
	0x2f, 0x2d, 0x49, 0x2d, 0x86, 0x52, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x12, 0x60, 0x65,
	0x7a, 0x10, 0x65, 0x7a, 0x20, 0x65, 0x7a, 0x10, 0x79, 0x29, 0xb3, 0xf4, 0xcc, 0x92, 0x8c, 0xd2,
	0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0xfd, 0xdc, 0xf2, 0xcc, 0x92, 0xec, 0xfc, 0x72, 0xfd, 0xf4, 0x7c,
	0x5d, 0xb0, 0x36, 0xdd, 0xb2, 0xc4, 0x9c, 0xcc, 0x94, 0xc4, 0x92, 0xfc, 0xa2, 0x62, 0x7d, 0x38,
	0x13, 0x62, 0xa2, 0x94, 0x1a, 0x4e, 0x8b, 0x73, 0x13, 0x4b, 0x92, 0x33, 0x52, 0xa1, 0xea, 0x94,
	0x96, 0x33, 0x72, 0xb1, 0x06, 0x81, 0x24, 0x84, 0xac, 0xb9, 0x78, 0x92, 0x12, 0x93, 0xb3, 0x53,
	0xf3, 0x52, 0xe2, 0xf3, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x9d, 0x24, 0x1e,
	0xdd, 0x97, 0x17, 0xe1, 0x12, 0x8a, 0x8b, 0x4e, 0xd4, 0xad, 0x8a, 0x37, 0xd0, 0xb5, 0xd4, 0x8b,
	0xad, 0x36, 0xd2, 0x31, 0x33, 0xa9, 0x55, 0x09, 0xe2, 0x86, 0xaa, 0xf6, 0x4b, 0xcc, 0x05, 0x69,
	0x66, 0x87, 0x9a, 0x2b, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x6d, 0xa4, 0xa8, 0x87, 0xcb, 0x4b, 0x7a,
	0xbe, 0x10, 0x85, 0x41, 0x30, 0x1d, 0x42, 0x2a, 0x5c, 0xbc, 0x89, 0xa5, 0x25, 0xf9, 0xe9, 0xa9,
	0x79, 0xa9, 0x45, 0x89, 0x25, 0xa9, 0x29, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0x1c, 0x41, 0xa8, 0x82,
	0x49, 0x6c, 0x60, 0x07, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x00, 0x4c, 0x08, 0x2e, 0x53,
	0x01, 0x00, 0x00,
}
