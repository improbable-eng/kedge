syntax = "proto3";

package kedge.config.http.routes;

import "github.com/mwitkow/go-proto-validators/validator.proto";

/// Route describes a mapping between a stable proxying endpoint and a pre-defined backend.
message Route {
    /// backend_name is the string identifying the HTTP backend pool to send data to.
    string backend_name = 1 [(validator.field) = {regex: "^[a-z_0-9.]{2,64}$"}];

    /// path_rules is a globbing expression that matches a URL path of the request.
    /// See: https://cloud.google.com/compute/docs/load-balancing/http/url-map
    /// If not present, '/*' is default.
    repeated string path_rules = 2;

    /// host_matcher matches on the ':authority' header (a.k.a. Host header) enabling Virtual Host-like proxying.
    /// The matching is done through lower-case string-equality.
    /// If none are present, the route skips ':authority' checks.
    string host_matcher = 3;

    /// metadata_matcher matches any HTTP inbound request Headers.
    /// Eeach key provided must find a match for the route to match.
    /// The matching is done through lower-case key match and explicit string-equality of values.
    /// If none are present, the route skips metadata checks.
    map<string, string> header_matcher = 4;

    /// proxy_mode controlls what kind of inbound requests this route matches. See
    ProxyMode proxy_mode = 5;

    /// Optional port matcher. If 0 route will ignore port.
    uint32 port_matcher = 6;
    /// TODO(mwitkow): Add fields that require TLS Client auth, or :authorization keys.

    bool autogenerated = 7;
}

enum ProxyMode {
    ANY = 0;
    /// Reverse Proxy is when the FE serves an authority (Host) publicly and clients connect to that authority
    /// directly. This is used to expose publicly DNS-resolvable names.
    REVERSE_PROXY = 1;
    /// Forward Proxy is when the FE serves as an HTTP_PROXY for a browser or an application. The resolution of the
    /// backend is done by the FE itself, so non-public names can be addressed.
    /// This may be from the 90s, but it still is very useful.
    ///
    /// IMPORTANT: If you have a PAC file configured in Firefox, the HTTPS rule behaves differently than in Chrome. The
    /// proxied requests are not FORWARD_PROXY requests but REVERSE_PROXY_REQUESTS.
    FORWARD_PROXY = 2;
}